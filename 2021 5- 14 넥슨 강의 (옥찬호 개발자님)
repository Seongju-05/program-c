1강 당신의 프로젝트는 안녕하십니까?


대표적인 프로젝트 실패사유
- 정의가 안되거나 잘못된 목표
- 알 수 없는 자원 할당
- 동성이몽 팀원들 등

알 수 없는 자원 할당
= 프로젝트에서 가장 중요한 부분은 자원입니다.
- 프로젝트를 잘 실행할 지식과 기술을 가진 사람들을 신중하게 선택해가야 합니다.

알 수 없는 자원 할당
= 프로젝트 팀원을 선택할 때 다음을 고려해야 합니다.
- 프로젝트에 필요한 작업과 기술을 문서화 합니다.
- 뛰어난 커뮤니케이션 기술과 팀 지향적 성격을 우선시 합니다.
- 다른 친구들에게 적합한 팀원을 추천받습니다.
- 필요하다면 포트폴리오를 받아서 확인하고 시나리오 기반 인터뷰를 진행합니다.

동상이몽인 팀원들
- 프로젝트를 더 좋게 만들고 싶은 마음은 팀원들 모두 똑같습니다.
하지만 '어떻게 좋게 만들것이가'에 대한 생각은 다를 수 있습니다.

- 일정 주기마다 팀원 모두가 모여 프로젝트 진행 상황을 공유하고
앞으로 할 일을 논의 합시다. 그래야 앞으로 이런 일이 생기지 않습니다.

모든일을 혼자 해결하려는 시도
- 프로젝트 리더는 프로젝트가 문제없이 잘 수행되기를 바랄것이다.
그러나 사용자의 피드백이 있을 경우, 정보를 공유할 책임이 있습니다.
- 이를 공유하지 않는다면,팀원들은 프로젝트가 위험에 처해 있는지
알 수 없게 되고, 결국 문제를 해결하기 위해 아무것도 할 수 없습니다.
개방된 커뮤니케이션을 통해 프로젝트의 실패를 방지할 수 있습니다.

갈팡질팡한 프로젝트 관리
- 성공적인 프로젝트를 위해서는 프로젝트 관리에 최선을 다해야 한다.
- 프로젝트가 잘 유지되고 있는지 어떻게 판단할까요?
ex)
- 프로젝트가 잘 빌드 되는가?
- 꾸준히 커밋이 되고 있는가?
- 프로젝트의 코드 스타일에 일관성이 있는가?
- 프로젝트의 코드 품질은 잘 관리되고 있는가?
- 프로젝트를 사용하기 위한 문서가 있는가?

- 프로젝트 관리 기준선
= 서비스랑 여러 플랫폼에서 빌드가 안되면 머지 불가능
= 코드 품질이 일정 수준을 만족하지 않으면 머지 불가능
= 테스트 거버리지 를 충족하지 못하면 머지 불가능
= 코드 리뷰를 거치지 않으면 머지 불가능

요약
관리를 잘하고 계획을 꼼꼼하게 세우면 훨씬 더 프로젝트를 만드는게 편하다.







2강 게임 회 취업 가이드

게임 프로그래머는 무엇을 하나요?
- 게임 컨텐츠 개발
- 게임 버그 재현 및 수정
- 라이브 서비스 유지 보수
- 게임 엔진 R & D

채용과정
- 입사 지원서 제출 - 자기소개서(20%) , *포트폴리오(80%)*
- 코딩 테스트 - 알고리즘 문제 풀기, 코딩 스타일
- 기술 면접 - 컴퓨터 공학 관련 지식, 문제 해결 과정
- 팀/임원 면접 - 팀에 어울리는 사람인가? 회사에 어울리는 사람인가?(인성 면접)
- 최종합격 - 연봉 협상, 입사일 협의

1. 포트폴리오 준비
- 학교에 다니는 동안 만들었던 것들을 중심으로 중심
= 가장 최근에 만들었던 프로그램부터 역순으로 나열하면 좋겠다.
= 어떤 기술을 사용했는가? 이 프로젝트라면 어떤 작업을 담담했는가?
= 힘들었던 점은 무엇인가? 어떤 방법으로 해결했는가?
= 구현한 코드는 GitHub나 GitLab에 정리하면 좋다

중요한것은 기본기
-학교 때 배우는 주요 과목의 핵심 내용을 노트로 정리
= 1순위 : 자료구조, 알고리즘, 운영체제, 컴퓨터 구조, 객체 지향 설계,
             컴퓨터 그래픽스, 계산기 하학, 선형대수, 확률과 통계

= 2순위 : 이산수학, 오토마타, 컴파일러, 컴퓨터 네트워킹, 인공지능
 
-주로 사용하는 언어도 다시 한번 정리
=C++: OOP를 중심으로 원리와 사용법을 다시 공부, 모던 C++ 문법도 살펴보기
= C#: 유니티 엔진을 사용하면서 봈던 코드들을 다시 한 번 살펴보기
* = 시간이 남을 때는 알고리즘 문제를 조금씩 풀어보기*

코딩 테스트 준비
- 백준, Leetcode, 프로그래머스 등을 활용해 준비
= 코드 스타일이나 변수 이름, 성능 등을 고려해서 구현하는 연습 할것
= 의도한 대로 실행하는 것도 물론 중요한지만,
   코드를 잘 작성했는 지도 평가하기 떄문에 주의해야한다.

면접에서는 무엇을 물아볼까?
- 학교에서 배웠던 내용 기반 질문
= 클래스 상속의 장단점 설명해보세요
= 뮤텍스 와 세마포어 를 설명해보세요
= 추상 클래스와 인터페이스의 공통점과 차이점을 설명해보세요
= 오브젝트 풀 이란 무엇인가요?
= 그래픽스 파이프라인을 설명해보세요.
= 라운드 로빈 알고리즘을 설명하고 사용하는 이유를 말해보세요
= 지역성이 무엇인지 설명하고 중요한 이유를 말해보세요.
= 힙이 무엇인지 설명하고 삽입/ 삭제 동작을 설명해보세요.

-면접에서는 무엇을 물어볼까요?
= 언어나 엔진 기반 질문 
= 기본 지식 활용 문제
   1억m * 1억m의 맵에 n명의 NPC가 있다고 가정할때
   플레이어가 움직일 때 가장 가까운 거리에 있는 NPC를 어떻게 효율적으로 찾을수 있을까요?

-포트폴리오 관련 질문
= 가장 최근에 했거나 자신있는 포트폴리오는 무엇인가요?
= 이 함수는 어떤 기능을 하나요?
= 변수 이름은 이렇게 지은 이유가 무엇인가요?
= 포트폴리오 하면서 버전 관리는 어떻게 하셨나요?
= GitHub를 사용해 협업을 한 적이 있나요?
= 포트폴리오를 만들면서 어떤 기술을 사용했나요?
= 포트폴리오를 만들면서 힘들었던 점은 무엇인가요?

-입사 후에 알아두면 좋은 몇가지 팀
   = 입사하면 1주일에서 2주일 정도 쉬고 입사를 하자 휴가시간 + 자기 개발
= 입사했으니 끝? 새로운 시작일 뿐이다.
= 회사에 계신 분들도 개인 시간을 활용해 공부하고 발전한다.
= 모르는것이 있을 땐 물어보기! (먼저 생각해야 할때고 있다.)
= 버전 관리 및 코드 병합 도구를 미리 알고 가자.
= 혼자 작업하지 않는다. 원할한 커뮤니케이션이 중요하다.
= 프로그래머도 문서를 써야한다. 문서 잘 쓰는 것도 스킬!
= 능동적으로 행동하는 사람이 되자.
= 본인이 맡은 업무의 일정을 잘 관리하는것이 제일 중요하다.
